// Objective-C API for talking to github.com/goany/mobile Go package.
//   gobind -lang=objc github.com/goany/mobile
//
// File is generated by gobind. Do not edit.

#ifndef __Unichain_H__
#define __Unichain_H__

@import Foundation;
#include "Universe.objc.h"


@class UnichainETHWallet;

/**
 * ETHWallet eth wallet facade
 */
@interface UnichainETHWallet : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
/**
 * NewETHWallet create new wallet with new pk pair
 */
- (instancetype)init;
/**
 * Address get wallet address
 */
- (NSString*)address;
/**
 * Encrypt package wallet as json format
 */
- (NSData*)encrypt:(NSString*)password error:(NSError**)error;
/**
 * Mnemonic generate wallet's mnemonic words
 */
- (NSString*)mnemonic:(NSError**)error;
/**
 * TransferCurrency transfer currency to special account address
 */
- (NSData*)transferCurrency:(NSString*)nonceString gasPriceString:(NSString*)gasPriceString gasLimitString:(NSString*)gasLimitString to:(NSString*)to amountString:(NSString*)amountString error:(NSError**)error;
/**
 * TransferToken transfer token to special account address
 */
- (NSData*)transferToken:(NSString*)nonceString gasPriceString:(NSString*)gasPriceString gasLimitString:(NSString*)gasLimitString contract:(NSString*)contract data:(NSData*)data error:(NSError**)error;
@end

/**
 * ETHWalletFromMnemonic create eth wallet from mnemonic
 */
FOUNDATION_EXPORT UnichainETHWallet* UnichainETHWalletFromMnemonic(NSString* mnemonic, NSError** error);

/**
 * ETHWalletFromPrivateKey create eth wallet from private key
 */
FOUNDATION_EXPORT UnichainETHWallet* UnichainETHWalletFromPrivateKey(NSString* privatekey, NSError** error);

/**
 * NewETHWallet create new wallet with new pk pair
 */
FOUNDATION_EXPORT UnichainETHWallet* UnichainNewETHWallet(NSError** error);

/**
 * OpenETHWallet create eth wallet from json metadata
 */
FOUNDATION_EXPORT UnichainETHWallet* UnichainOpenETHWallet(NSData* json, NSString* password, NSError** error);

#endif
